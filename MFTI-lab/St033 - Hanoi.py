'''
Имеется три стержня (пронумеруем их числами 1, 2 и 3).
 На первом стержне находится n колец с радиусами от 1 до n.
Кольца отсортированы по радиусу, и наибольшее кольцо лежит ниже всех.

Вам требуется найти и записать алгоритм переноса всех n колец
 с первого стержня на третий по следующим правилам:
за один ход можно переносить только одно кольцо;
нельзя класть большее кольцо на меньшее.

Программа должна вывести на экран кратчайшую последовательность действий,
 необходимую для того, чтобы перенести все кольца с первого стержня на третий.

Формат вывода:
Порядок действий для решения головоломки. Каждое действие записывается
 на отдельной строке. Действие записывается в формате "номер стержня,
 с которого снимаем кольцо" - "номер стержня, на который надеваем кольцо"
1 - 2
1 - 3
2 - 3
'''
n = int(input())
count = 0
def hanoi(x_from, x_to, n):
    global count
    if n == 1:
        print(x_from, '-', x_to)
        count += 1
        return
    # вспомогательный столбик - иной чем x_from и x_to
    x_other = 6 - x_from - x_to
    # переносим n-1 на вспомогательный
    hanoi(x_from, x_other, n-1)
    # переносим нижний блин на нужный
    print(x_from, '-', x_to)
    count += 1
    # переносим с третьего на нужный
    hanoi(x_other, x_to, n-1)

hanoi(1, 3, n)
print('Total moves : ', count)

'''
def hanoi(n, _from, _tmp, _to):
    if n != 0:
        hanoi(n-1, _from, _to, _tmp)
        print(_from, "-", _to)
        hanoi(n-1, _tmp, _from, _to)

hanoi(int(input()), "1", "2", "3")
'''